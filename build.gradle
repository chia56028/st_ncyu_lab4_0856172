plugins {
    id 'java'
}

def getLatestHash = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

def getLatestTag = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

def getVersionNumber = { ->
    if (!getLatestTag()) {
        return 'SNAPSHOT' + "-" + getLatestHash()
    } else {
        return getLatestTag()
    }
}

group 'org.example'
version "${getVersionNumber()}"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            'org.junit.jupiter:junit-jupiter-api:5.8.0-M1',
            'org.junit.jupiter:junit-jupiter-params:5.8.0-M1',
            'org.junit.platform:junit-platform-commons:1.8.0-M1'
    )
    testRuntimeOnly (
            'org.junit.jupiter:junit-jupiter-engine',
            'org.junit.jupiter:junit-jupiter-params:5.8.0-M1'
    )

    testCompile 'org.junit.jupiter:junit-jupiter:5.8.0-M1'
}

test {
    useJUnitPlatform()
}